{"mappings":"C,A,WCAA,WAAW;ACAX,IAAM,EAAW,6CAEV,eAAe,IACpB,IAAM,EAAW,MAAM,MAAM,CAAC,EAAE,EAAS,aAAa,CAAC,EACjD,EAAO,MAAM,EAAS,IAA5B,GACA,OAAO,CACT,CAQO,eAAe,EAAqB,CAAQ,EACjD,IAAM,EAAW,MAAM,MAAM,CAAC,EAAE,EAAS,kBAAkB,EAAE,EAAS,CAAC,EACjE,EAAO,MAAM,EAAS,IAA5B,GACA,OAAO,CACT,CDbA,IAAM,EAAsB,SAAS,aAAA,CAAc,kBAEnD,eAAe,EAAoB,CAAQ,EACzC,GAAI,CACF,IAAM,EAAQ,MAAM,AAAA,EAAqB,IACzC,AEAG,SAAwB,CAAK,EAClC,IAAM,EAAW,SAAS,aAAA,CAAc,aACxC,CAAA,EAAS,SAAA,CAAY,EAAM,MAAA,CACvB,EAAM,GAAA,CAAI,AAAA,GAAQ,CAAC,uBAAuB,EAAE,EAAK,KAAA,CAAM,MAAM,CAAC,EAAE,IAAA,CAAK,IACrE,8CACN,EFLmB,EACjB,CAAE,MAAO,EAAO,CACd,QAAQ,KAAA,CAAM,uBAAwB,EACxC,CACF,EAoBA,AAlBA,iBACE,GAAI,CACF,kBAAkB;AAClB,IAAM,EAAa,MAAM,AAAA,KACzB,AEpBG,SAA4B,CAAU,EAC3C,IAAM,EAAe,SAAS,aAAA,CAAc,iBAC5C,CAAA,EAAa,SAAA,CAAY,EACtB,GAAA,CACC,AAAA,GACE,CAAC,6CAA6C,EAAE,EAAS,SAAA,CAAU,EAAE,EAAE,EAAS,SAAA,CAAU,SAAS,CAAC,EAEvG,IAAA,CAAK,GACV,EFYuB,GAEnB,qCAAqC;AACrC,EAAoB,gBAAA,CAAiB,QAAS,AAAA,IAC5C,GAAI,EAAM,MAAA,CAAO,SAAA,CAAU,QAAA,CAAS,iBAAkB,CACpD,IAAM,EAAmB,EAAM,MAAA,CAAO,OAAA,CAAQ,QAA9C,CACA,EAAoB,EACtB,CACF,EACF,CAAE,MAAO,EAAO,CACd,QAAQ,KAAA,CAAM,0BAA2B,EAC3C,CACF,G,G,4D","sources":["<anon>","src/js/category.js","src/js/api.js","src/js/category-markup.js"],"sourcesContent":["(function () {\n// index.js\nconst $8197bff4c39d585a$var$BASE_URL = \"https://books-backend.p.goit.global/books/\";\nasync function $8197bff4c39d585a$export$416ec9f5729de215() {\n    const response = await fetch(`${$8197bff4c39d585a$var$BASE_URL}category-list`);\n    const data = await response.json();\n    return data;\n}\nasync function $8197bff4c39d585a$export$c257504009eb96bd() {\n    const response = await fetch(`${$8197bff4c39d585a$var$BASE_URL}top-books`);\n    const data = await response.json();\n    return data;\n}\nasync function $8197bff4c39d585a$export$df003a2e8059ec26(category) {\n    const response = await fetch(`${$8197bff4c39d585a$var$BASE_URL}category?category=${category}`);\n    const data = await response.json();\n    return data;\n}\nasync function $8197bff4c39d585a$export$f05e3baf20b35c9(bookId) {\n    const response = await fetch(`${$8197bff4c39d585a$var$BASE_URL}${bookId}`);\n    const data = await response.json();\n    return data;\n}\n\n\nfunction $528d7ab527e1a48f$export$7b0178aacb0b75f6(categories) {\n    const categoryList = document.querySelector(\".category-list\");\n    categoryList.innerHTML = categories.map((category)=>`<button class=\"category-item\" data-category=\"${category.list_name}\">${category.list_name}</button>`).join(\"\");\n}\nfunction $528d7ab527e1a48f$export$96f341d14ca64895(books) {\n    const bookList = document.querySelector(\".book-list\");\n    bookList.innerHTML = books.length ? books.map((book)=>`<div class=\"book-item\">${book.title}</div>`).join(\"\") : \"<div>No books found for this category.</div>\";\n}\n\n\nconst $1b5243cbc9dc9139$var$categoryListElement = document.querySelector(\".category-list\");\nasync function $1b5243cbc9dc9139$var$loadBooksByCategory(category) {\n    try {\n        const books = await (0, $8197bff4c39d585a$export$df003a2e8059ec26)(category);\n        (0, $528d7ab527e1a48f$export$96f341d14ca64895)(books);\n    } catch (error) {\n        console.error(\"Error loading books:\", error);\n    }\n}\nasync function $1b5243cbc9dc9139$var$initializeApp() {\n    try {\n        // Load categories\n        const categories = await (0, $8197bff4c39d585a$export$416ec9f5729de215)();\n        (0, $528d7ab527e1a48f$export$7b0178aacb0b75f6)(categories);\n        // Event listener for category clicks\n        $1b5243cbc9dc9139$var$categoryListElement.addEventListener(\"click\", (event)=>{\n            if (event.target.classList.contains(\"category-item\")) {\n                const selectedCategory = event.target.dataset.category;\n                $1b5243cbc9dc9139$var$loadBooksByCategory(selectedCategory);\n            }\n        });\n    } catch (error) {\n        console.error(\"Error initializing app:\", error);\n    }\n}\n$1b5243cbc9dc9139$var$initializeApp();\n\n})();\n//# sourceMappingURL=index.f1552259.js.map\n","// index.js\n\nimport { fetchCategories, fetchBooksByCategory } from './api.js';\nimport { createCategoryList, createBookList } from './category-markup.js';\n\nconst categoryListElement = document.querySelector('.category-list');\n\nasync function loadBooksByCategory(category) {\n  try {\n    const books = await fetchBooksByCategory(category);\n    createBookList(books);\n  } catch (error) {\n    console.error('Error loading books:', error);\n  }\n}\n\nasync function initializeApp() {\n  try {\n    // Load categories\n    const categories = await fetchCategories();\n    createCategoryList(categories);\n\n    // Event listener for category clicks\n    categoryListElement.addEventListener('click', event => {\n      if (event.target.classList.contains('category-item')) {\n        const selectedCategory = event.target.dataset.category;\n        loadBooksByCategory(selectedCategory);\n      }\n    });\n  } catch (error) {\n    console.error('Error initializing app:', error);\n  }\n}\n\ninitializeApp();\n","const BASE_URL = 'https://books-backend.p.goit.global/books/';\n\nexport async function fetchCategories() {\n  const response = await fetch(`${BASE_URL}category-list`);\n  const data = await response.json();\n  return data;\n}\n\nexport async function fetchTopBooks() {\n  const response = await fetch(`${BASE_URL}top-books`);\n  const data = await response.json();\n  return data;\n}\n\nexport async function fetchBooksByCategory(category) {\n  const response = await fetch(`${BASE_URL}category?category=${category}`);\n  const data = await response.json();\n  return data;\n}\n\nexport async function fetchBookDetails(bookId) {\n  const response = await fetch(`${BASE_URL}${bookId}`);\n  const data = await response.json();\n  return data;\n}\n","export function createCategoryList(categories) {\n  const categoryList = document.querySelector('.category-list');\n  categoryList.innerHTML = categories\n    .map(\n      category =>\n        `<button class=\"category-item\" data-category=\"${category.list_name}\">${category.list_name}</button>`\n    )\n    .join('');\n}\n\nexport function createBookList(books) {\n  const bookList = document.querySelector('.book-list');\n  bookList.innerHTML = books.length\n    ? books.map(book => `<div class=\"book-item\">${book.title}</div>`).join('')\n    : '<div>No books found for this category.</div>';\n}\n"],"names":["$8197bff4c39d585a$var$BASE_URL","$8197bff4c39d585a$export$416ec9f5729de215","response","fetch","data","json","$8197bff4c39d585a$export$df003a2e8059ec26","category","$1b5243cbc9dc9139$var$categoryListElement","document","querySelector","$1b5243cbc9dc9139$var$loadBooksByCategory","books","bookList","innerHTML","length","map","book","title","join","error","console","$1b5243cbc9dc9139$var$initializeApp","categories","categoryList","list_name","addEventListener","event","target","classList","contains","selectedCategory","dataset"],"version":3,"file":"index.f1552259.js.map"}